{"version":3,"sources":["components/burger-constructor/burgerConstructorDndStyles.module.css","components/app-header/appHeaderStyles.module.css","components/burger-ingredients/components/ingredient-detail/ingredientDetails.module.css","reportWebVitals.ts","services/actions/modalActions.ts","services/reducers/modalReducer.ts","utils/api.ts","services/actions/ingredientsActions.ts","services/reducers/ingredientsReducer.ts","services/actions/orderActions.ts","services/reducers/orderReducer.ts","services/actions/constructorActions.ts","services/reducers/constructorReducer.ts","services/reducers/root-reducer.ts","services/store.ts","services/hooks/hooks.ts","components/app-header/appHeader.tsx","components/burger-ingredients/components/ingredient-element/ingredientElement.tsx","components/burger-ingredients/components/ingredients-dnd-wrapper/ingredient-dnd-wrapper.tsx","components/burger-ingredients/components/ingredient-group/ingredientGroup.tsx","components/burger-ingredients/burgerIngredients.tsx","components/burger-constructor/components/ingredients-mold/ingredientsMold.tsx","components/burger-constructor/components/bun-mold/bunMold.tsx","components/burger-constructor/components/burger-constructor-element/burgerConstructorElement.tsx","components/burger-constructor/components/burger-constructor-element-dnd-wrapper/burgerConstructorElementDndWrapper.tsx","components/burger-constructor/burgerConstructorDnd.tsx","components/burger-constructor/components/burger-constructor-dnd-wrapper/burger-constructor-dnd-wrapper.tsx","components/modal/modal-overlay/modalOverlay.tsx","components/modal/modal.tsx","image/doneImg.svg","components/order-details/orderDetails.jsx","components/burger-ingredients/components/ingredient-detail/ingredientDetails.tsx","components/app/app.tsx","index.tsx","components/burger-ingredients/components/ingredient-element/ingredientElementStyles.module.css","components/order-details/orderDetails.module.css","components/burger-constructor/components/bun-mold/bunMoldStyles.module.css","components/burger-ingredients/burgerIngredientsStyles.module.css","components/app/appStyles.module.css","components/modal/modal.module.css","components/burger-ingredients/components/ingredient-group/ingredientGroupStyles.module.css","components/burger-constructor/components/ingredients-mold/ingredientMoldStyles.module.css","components/burger-constructor/components/burger-constructor-element/burgerConstructorElementStyles.module.css","components/modal/modal-overlay/modalOverlay.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_MODAL_ERROR","OPEN_MODAL_INGREDIENT","OPEN_MODAL_ORDER","CLOSE_MODAL","closeModal","type","modalInitialState","modalIngredientData","isOrderDetailModalVisible","isIngredientDetailModalVisible","hasModalError","inputDataUrl","GET_INGREDIENTS_API_REQUEST","GET_INGREDIENTS_API_FAILD","GET_INGREDIENTS_API_SUCCESS","getIngredientsRequestApi","dispatch","fetch","res","ok","json","Promise","reject","status","statusText","getResponseData","ingredients","getIngredientsApiSuccess","data","catch","error","console","log","defaultIngredientsState","ingredientsApiRequest","ingredientsApiFailed","ingredientsDataFromServer","SEND_ORDER_NUMBER_REQUEST","SEND_ORDER_NUMBER_FAILED","SEND_ORDER_NUMBER_SUCCESS","defaultOrderState","orderId","isOrderInfoLoading","isOrderInfoRequestFaild","DROP_SELECTED_INGREDIENT","DELETE_INGREDIENT","CLEAR_ORDER_LIST","REORDER_CONSTRUCTOR_INGREDIENT","defaultBurgerConstructorState","droppedIngredients","droppedBun","rootReducer","combineReducers","modal","state","action","ingredient","order","orderID","isOrderInfoFaild","burgerConstructor","droppedIngredient","filter","i","index","indexToDelete","constructorIngredientsArr","draggedEl","splice","draggedElementIndex","targetElementIndex","enhancer","composeWithDevTools","applyMiddleware","thunk","storeState","createStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppHeader","className","styles","header","container","nav__menu_left","menu_btn","logo","nav__menu_right","IngredientElement","forwardRef","ref","openModal","isDragging","count","ingredient_element","dragging_element","ingredient_content","onClick","modalType","itemId","_id","alt","src","image","element_img","price","name","size","IngredientElementDndWrapper","useDrag","item","collect","monitor","isDrag","dragRef","IngredientGroup","groupName","groupElements","content","map","burgerItem","BurgerIngredients","store","buns","useMemo","sauces","mains","bunRef","useRef","sauceRef","mainRef","useState","currentTab","setCurrentTab","handleTabClick","useCallback","tab","current","scrollIntoView","behavior","ingredientCounter","reduce","result","length","burger_ingredients","burger_menu_tab","value","active","burger_list_container","onScroll","event","scrollPosition","target","scrollTop","sauceTabPosition","offsetTop","mainTabPosition","IngredientsMold","children","BunMold","position","mold","mold_position_top","mold_position_bottom","BurgerConstructorElement","handleDeleteIngredient","handleDelete","container_wrapper","text","thumbnail","handleClose","BurgerConstructorElementDndWrapper","useDrop","accept","drop","isHover","isOver","dropTarget","useEffect","BurgerConstructorDnd","totalPrice","deleteIngredient","main_container","ingredients_list","top_container","isLocked","constructor_container","uid","bottom_container","outcome","orderIngredientList","concat","el","a","postOrderOption","method","headers","body","JSON","stringify","serverResOrderId","Error","getOrderNumberApi","alert","BurgerConstructorDndWrapper","uuidv4","dropSelectedIngredient","ModalOverlay","overlay","Modal","modalRoot","document","getElementById","onEscPress","evt","key","preventDefault","addEventListener","removeEventListener","createPortal","currentTarget","modal_closebtn","OrderDetails","loader","spanLoader","glow","number","icon","doneImg","IngredientDetails","captioncontainer","element","calories","proteins","fat","carbohydrates","App","find","openModalIngredient","app","DndProvider","backend","HTML5Backend","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8c43f23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"burgerConstructorDndStyles_main_container__D3QhM\",\"ingredients_list\":\"burgerConstructorDndStyles_ingredients_list__X6WLl\",\"ingredient\":\"burgerConstructorDndStyles_ingredient__1tcuD\",\"top_container\":\"burgerConstructorDndStyles_top_container__27SqR\",\"bottom_container\":\"burgerConstructorDndStyles_bottom_container__2PnJY\",\"outcome\":\"burgerConstructorDndStyles_outcome__3ZEAe\",\"price\":\"burgerConstructorDndStyles_price__A--ap\",\"container_wrapper\":\"burgerConstructorDndStyles_container_wrapper__BeBJ9\",\"constructor_container\":\"burgerConstructorDndStyles_constructor_container__149Os\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"appHeaderStyles_header__1uX7e\",\"container\":\"appHeaderStyles_container__2DiZC\",\"logo\":\"appHeaderStyles_logo__2J53j\",\"menu_btn\":\"appHeaderStyles_menu_btn__3KE6s\",\"nav__menu_left\":\"appHeaderStyles_nav__menu_left__2Yvor\",\"nav__menu_right\":\"appHeaderStyles_nav__menu_right__3ngqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredientDetails_container__b3_sb\",\"captioncontainer\":\"ingredientDetails_captioncontainer__2MLs7\",\"element\":\"ingredientDetails_element__2AnYG\",\"header\":\"ingredientDetails_header__25uS0\",\"icon\":\"ingredientDetails_icon__m9Ftk\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IIngredient } from \"../../utils/types\";\r\n//Добавление данных о просматриваемом в модальном окне IngredientDetails ингредиенте.\r\nexport const SET_MODAL_ERROR: \"SET_MODAL_ERROR\" = \"SET_MODAL_ERROR\";\r\nexport const OPEN_MODAL_INGREDIENT: \"OPEN_MODAL_INGREDIENT\" =\r\n  \"OPEN_MODAL_INGREDIENT\";\r\nexport const OPEN_MODAL_ORDER: \"OPEN_MODAL_ORDER\" = \"OPEN_MODAL_ORDER\";\r\n//Удаление данных о просматриваемом в модальном окне ингредиенте при закрытии модального окна.\r\n\r\nexport const CLOSE_MODAL: \"CLOSE_MODAL\" = \"CLOSE_MODAL\";\r\n\r\nexport interface ISetModalError {\r\n  readonly type: typeof SET_MODAL_ERROR;\r\n}\r\n\r\nexport interface IOpenModalIngredient {\r\n  readonly type: typeof OPEN_MODAL_INGREDIENT;\r\n  readonly ingredient: IIngredient;\r\n}\r\n\r\nexport interface IOpenModalOrder {\r\n  readonly type: typeof OPEN_MODAL_ORDER;\r\n}\r\n\r\nexport interface ICloseModal {\r\n  readonly type: typeof CLOSE_MODAL;\r\n}\r\n\r\nexport type TModalActions =\r\n  | ISetModalError\r\n  | IOpenModalIngredient\r\n  | IOpenModalOrder\r\n  | ICloseModal;\r\n\r\nexport const setModalError = (): ISetModalError => {\r\n  return {\r\n    type: SET_MODAL_ERROR,\r\n  };\r\n};\r\n\r\nexport const openModalIngredient = (ingredient: any): IOpenModalIngredient => {\r\n  return {\r\n    type: OPEN_MODAL_INGREDIENT,\r\n    ingredient,\r\n  };\r\n};\r\n\r\nexport const openModalOrder = (): IOpenModalOrder => {\r\n  return {\r\n    type: OPEN_MODAL_ORDER,\r\n  };\r\n};\r\n\r\nexport const closeModal = (): ICloseModal => {\r\n  return {\r\n    type: CLOSE_MODAL,\r\n  };\r\n};\r\n","import {\r\n  OPEN_MODAL_INGREDIENT,\r\n  OPEN_MODAL_ORDER,\r\n  SET_MODAL_ERROR,\r\n  CLOSE_MODAL,\r\n} from \"../actions/modalActions\";\r\n\r\nimport { TModalActions } from \"../actions/modalActions\";\r\n\r\n//import { IIngredient } from \"../../utils/types\";\r\n\r\ntype TmodalInitialState = {\r\n  modalIngredientData: any;\r\n  isOrderDetailModalVisible: boolean;\r\n  isIngredientDetailModalVisible: boolean;\r\n  hasModalError: boolean;\r\n};\r\nconst modalInitialState: TmodalInitialState = {\r\n  modalIngredientData: {},\r\n  isOrderDetailModalVisible: false,\r\n  isIngredientDetailModalVisible: false,\r\n  hasModalError: false,\r\n};\r\n\r\nexport const modalReducer = (\r\n  state = modalInitialState,\r\n  action: TModalActions\r\n) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        hasModalError: true,\r\n        isIngredientDetailModalVisible: true,\r\n        modalIngredientData: action.ingredient,\r\n      };\r\n    }\r\n    case OPEN_MODAL_ORDER: {\r\n      return {\r\n        ...state,\r\n        hasModalError: true,\r\n        isOrderDetailModalVisible: true,\r\n      };\r\n    }\r\n    case SET_MODAL_ERROR: {\r\n      return {\r\n        ...state,\r\n        hasModalError: true,\r\n      };\r\n    }\r\n    case CLOSE_MODAL: {\r\n      return {\r\n        ...state,\r\n        modalIngredientData: {},\r\n        isOrderDetailModalVisible: false,\r\n        isIngredientDetailModalVisible: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const inputDataUrl = \"https://norma.nomoreparties.space/api\";\r\n\r\nexport const getResponseData = (res: Response) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\r\n};\r\n","import { IIngredient } from \"../../utils/types\";\r\nimport { getResponseData, inputDataUrl } from \"../../utils/api\";\r\nimport { AppDispatch, AppThunk } from \"../..\";\r\n\r\nexport const GET_INGREDIENTS_API_REQUEST: \"GET_INGREDIENTS_API_REQUEST\" =\r\n  \"GET_INGREDIENTS_API_REQUEST\";\r\nexport const GET_INGREDIENTS_API_FAILD: \"GET_INGREDIENTS_API_FAILD\" =\r\n  \"GET_INGREDIENTS_API_FAILD\";\r\nexport const GET_INGREDIENTS_API_SUCCESS: \"GET_INGREDIENTS_API_SUCCESS\" =\r\n  \"GET_INGREDIENTS_API_SUCCESS\";\r\n\r\nexport interface IGetIngredientsRequest {\r\n  readonly type: typeof GET_INGREDIENTS_API_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_API_SUCCESS;\r\n  readonly ingredients: IIngredient[];\r\n}\r\n\r\nexport interface IGetIngredientsFailed {\r\n  readonly type: typeof GET_INGREDIENTS_API_FAILD;\r\n}\r\n\r\nexport type TIngredientsActions =\r\n  | IGetIngredientsRequest\r\n  | IGetIngredientsSuccess\r\n  | IGetIngredientsFailed;\r\n\r\nconst getIngredientsApiRequest = (): IGetIngredientsRequest => {\r\n  return {\r\n    type: GET_INGREDIENTS_API_REQUEST,\r\n  };\r\n};\r\n\r\nconst getIngredientsApiSuccess = (\r\n  ingredients: IIngredient[]\r\n): IGetIngredientsSuccess => {\r\n  return {\r\n    type: GET_INGREDIENTS_API_SUCCESS,\r\n    ingredients,\r\n  };\r\n};\r\n\r\nconst getIngredientsApiFaild = (): IGetIngredientsFailed => {\r\n  return {\r\n    type: GET_INGREDIENTS_API_FAILD,\r\n  };\r\n};\r\n\r\nexport const getIngredientsRequestApi: AppThunk =\r\n  () => (dispatch: AppDispatch) => {\r\n    dispatch(getIngredientsApiRequest());\r\n    return fetch(`${inputDataUrl}/ingredients`)\r\n      .then((res) => getResponseData(res))\r\n      .then((ingredients) => {\r\n        dispatch(getIngredientsApiSuccess(ingredients.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Данные с сервера не получены, ошибка: ${error}`);\r\n        dispatch(getIngredientsApiFaild());\r\n      });\r\n  };\r\n","import {\r\n  GET_INGREDIENTS_API_REQUEST,\r\n  GET_INGREDIENTS_API_FAILD,\r\n  GET_INGREDIENTS_API_SUCCESS,\r\n} from \"../actions/ingredientsActions\";\r\n\r\nimport { TIngredientsActions } from \"../actions/ingredientsActions\";\r\n\r\nimport { IIngredient } from \"../../utils/types\";\r\n\r\ntype TdefaultIngredientsState = {\r\n  ingredientsApiRequest: boolean;\r\n  ingredientsApiFailed: boolean;\r\n  ingredientsDataFromServer: IIngredient[];\r\n};\r\nconst defaultIngredientsState: TdefaultIngredientsState = {\r\n  ingredientsApiRequest: true,\r\n  ingredientsApiFailed: false,\r\n  ingredientsDataFromServer: [],\r\n};\r\n\r\nexport const ingredientsReducer = (\r\n  state = defaultIngredientsState,\r\n  action: TIngredientsActions\r\n): TdefaultIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENTS_API_REQUEST: {\r\n      return {\r\n        ...state,\r\n        ingredientsApiRequest: true,\r\n        ingredientsApiFailed: false,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_API_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientsDataFromServer: action.ingredients,\r\n        ingredientsApiRequest: false,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_API_FAILD: {\r\n      return {\r\n        ...defaultIngredientsState,\r\n        ingredientsApiFailed: true,\r\n        ingredientsApiRequest: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { inputDataUrl } from \"../../utils/api\";\r\nimport type { AppDispatch, AppThunk } from \"../../index\";\r\n\r\n//Получение и обновление номера заказа в модальном окне OrderDetails.\r\nexport const SEND_ORDER_NUMBER_REQUEST: \"SEND_ORDER_NUMBER_REQUEST\" =\r\n  \"SEND_ORDER_NUMBER_REQUEST\";\r\nexport const SEND_ORDER_NUMBER_FAILED: \"SEND_ORDER_NUMBER_FAILED\" =\r\n  \"SEND_ORDER_NUMBER_FAILED\";\r\nexport const SEND_ORDER_NUMBER_SUCCESS: \"SEND_ORDER_NUMBER_SUCCESS\" =\r\n  \"SEND_ORDER_NUMBER_SUCCESS\";\r\n\r\nexport interface ISendOrderNumberRequest {\r\n  readonly type: typeof SEND_ORDER_NUMBER_REQUEST;\r\n}\r\n\r\nexport interface ISendOrderNumberSuccess {\r\n  readonly type: typeof SEND_ORDER_NUMBER_SUCCESS;\r\n  readonly orderID: number;\r\n}\r\n\r\nexport interface ISendOrderNumberFaild {\r\n  readonly type: typeof SEND_ORDER_NUMBER_FAILED;\r\n}\r\n\r\nexport type TOrderActions =\r\n  | ISendOrderNumberRequest\r\n  | ISendOrderNumberSuccess\r\n  | ISendOrderNumberFaild;\r\n\r\nconst sendOrderNumberRequest = (): ISendOrderNumberRequest => {\r\n  return {\r\n    type: SEND_ORDER_NUMBER_REQUEST,\r\n  };\r\n};\r\n\r\nconst sendOrderNumberSuccess = (orderID: number): ISendOrderNumberSuccess => {\r\n  return {\r\n    type: SEND_ORDER_NUMBER_SUCCESS,\r\n    orderID,\r\n  };\r\n};\r\n\r\nconst sendOrderNumberFailed = (): ISendOrderNumberFaild => {\r\n  return {\r\n    type: SEND_ORDER_NUMBER_FAILED,\r\n  };\r\n};\r\n\r\nexport const getOrderNumberApi: AppThunk = (\r\n  orderIngredientList: Array<string>\r\n) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    const postOrderOption = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        ingredients: orderIngredientList,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      dispatch(sendOrderNumberRequest());\r\n      const res = await fetch(`${inputDataUrl}/orders`, postOrderOption);\r\n      if (res.ok) {\r\n        const serverResOrderId = await res.json();\r\n        dispatch(sendOrderNumberSuccess(serverResOrderId));\r\n      } else {\r\n        throw new Error(`Error ${res.status}`);\r\n      }\r\n    } catch (error) {\r\n      dispatch(sendOrderNumberFailed());\r\n    }\r\n  };\r\n};\r\n","import {\r\n  SEND_ORDER_NUMBER_REQUEST,\r\n  SEND_ORDER_NUMBER_FAILED,\r\n  SEND_ORDER_NUMBER_SUCCESS,\r\n} from \"../actions/orderActions\";\r\n\r\nimport { TOrderActions } from \"../actions/orderActions\";\r\n\r\ntype TdefaultOrderState = {\r\n  orderId: number | null;\r\n  isOrderInfoLoading: boolean;\r\n  isOrderInfoRequestFaild: boolean;\r\n};\r\n\r\nconst defaultOrderState: TdefaultOrderState = {\r\n  orderId: null,\r\n  isOrderInfoLoading: false,\r\n  isOrderInfoRequestFaild: false,\r\n};\r\n\r\nexport const orderReducer = (\r\n  state = defaultOrderState,\r\n  action: TOrderActions\r\n) => {\r\n  switch (action.type) {\r\n    case SEND_ORDER_NUMBER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isOrderInfoLoading: true,\r\n      };\r\n    }\r\n    case SEND_ORDER_NUMBER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderId: action.orderID,\r\n        isOrderInfoLoading: false,\r\n        isOrderInfoRequestFaild: false,\r\n      };\r\n    }\r\n    case SEND_ORDER_NUMBER_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderId: null,\r\n        isOrderInfoFaild: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IIngredient } from \"../../utils/types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const DROP_SELECTED_INGREDIENT: \"DROP_SELECTED_INGREDIENT\" =\r\n  \"DROP_SELECTED_INGREDIENT\";\r\nexport const DELETE_INGREDIENT: \"DELETE_INGREDIENT\" = \"DELETE_INGREDIENT\";\r\nexport const CLEAR_ORDER_LIST: \"CLEAR_ORDER_LIST\" = \"CLEAR_ORDER_LIST\";\r\nexport const REORDER_CONSTRUCTOR_INGREDIENT: \"REORDER_CONSTRUCTOR_INGREDIENT\" =\r\n  \"REORDER_CONSTRUCTOR_INGREDIENT\";\r\n\r\nexport interface IDropSelectedIngredient {\r\n  readonly type: typeof DROP_SELECTED_INGREDIENT;\r\n  readonly droppedIngredient: IIngredient;\r\n}\r\n\r\nexport interface IDeleteIngredient {\r\n  readonly type: typeof DELETE_INGREDIENT;\r\n  readonly indexToDelete: number;\r\n}\r\n\r\nexport interface IClearOrderList {\r\n  readonly type: typeof CLEAR_ORDER_LIST;\r\n}\r\n\r\nexport interface IReorderConstructorIngredient {\r\n  readonly type: typeof REORDER_CONSTRUCTOR_INGREDIENT;\r\n  readonly targetElementIndex: number;\r\n  readonly draggedElementIndex: number;\r\n}\r\n\r\nexport type TConstructorActions =\r\n  | IDropSelectedIngredient\r\n  | IDeleteIngredient\r\n  | IClearOrderList\r\n  | IReorderConstructorIngredient;\r\n\r\nexport const dropSelectedIngredient = (\r\n  ingredient: IIngredient\r\n): IDropSelectedIngredient => {\r\n  return {\r\n    type: DROP_SELECTED_INGREDIENT,\r\n    droppedIngredient: { ...ingredient, uid: uuidv4() },\r\n  };\r\n};\r\n\r\nexport const deleteIngredient = (indexToDelete: number): IDeleteIngredient => {\r\n  return { type: DELETE_INGREDIENT, indexToDelete };\r\n};\r\n\r\nexport const clearOrderList = (): IClearOrderList => {\r\n  return {\r\n    type: CLEAR_ORDER_LIST,\r\n  };\r\n};\r\n\r\nexport const reorderConstructorIngredient = (\r\n  draggedElementIndex: number,\r\n  targetElementIndex: number\r\n): IReorderConstructorIngredient => {\r\n  return {\r\n    type: REORDER_CONSTRUCTOR_INGREDIENT,\r\n    draggedElementIndex,\r\n    targetElementIndex,\r\n  };\r\n};\r\n","import {\r\n  CLEAR_ORDER_LIST,\r\n  DROP_SELECTED_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  REORDER_CONSTRUCTOR_INGREDIENT,\r\n} from \"../actions/constructorActions\";\r\n\r\nimport { TConstructorActions } from \"../actions/constructorActions\";\r\n\r\nimport { IIngredient } from \"../../utils/types\";\r\n\r\ntype TdefaultBurgerConstructorState = {\r\n  droppedIngredients: IIngredient[];\r\n  droppedBun: IIngredient | null;\r\n};\r\n\r\nconst defaultBurgerConstructorState: TdefaultBurgerConstructorState = {\r\n  droppedIngredients: [],\r\n  droppedBun: null,\r\n};\r\n\r\nexport const constructorReducer = (\r\n  state = defaultBurgerConstructorState,\r\n  action: TConstructorActions\r\n) => {\r\n  switch (action.type) {\r\n    case DROP_SELECTED_INGREDIENT: {\r\n      const droppedIngredient = action.droppedIngredient;\r\n      if (droppedIngredient.type === \"bun\") {\r\n        return {\r\n          ...state,\r\n          droppedBun: droppedIngredient,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        droppedIngredients: [...state.droppedIngredients, droppedIngredient],\r\n      };\r\n    }\r\n    case DELETE_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        droppedIngredients: state.droppedIngredients.filter(\r\n          (i, index) => index !== action.indexToDelete\r\n        ),\r\n      };\r\n    }\r\n    case CLEAR_ORDER_LIST: {\r\n      return {\r\n        ...state,\r\n        droppedIngredients: [],\r\n        droppedBun: null,\r\n      };\r\n    }\r\n    case REORDER_CONSTRUCTOR_INGREDIENT: {\r\n      const constructorIngredientsArr = [...state.droppedIngredients];\r\n      const draggedEl = constructorIngredientsArr.splice(\r\n        action.draggedElementIndex,\r\n        1\r\n      ); // удаляет и возвращает один элемент по индексу draggedElementIndex\r\n      constructorIngredientsArr.splice(\r\n        action.targetElementIndex,\r\n        0,\r\n        draggedEl[0]\r\n      ); //добавляем удаленный элемент на место таргета\r\n      return {\r\n        ...state,\r\n        droppedIngredients: constructorIngredientsArr,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { modalReducer } from \"./modalReducer\";\r\nimport { ingredientsReducer } from \"./ingredientsReducer\";\r\nimport { orderReducer } from \"./orderReducer\";\r\nimport { constructorReducer } from \"./constructorReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  modal: modalReducer,\r\n  ingredients: ingredientsReducer,\r\n  order: orderReducer,\r\n  burgerConstructor: constructorReducer,\r\n});\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../services/reducers/root-reducer\";\r\n\r\nconst enhancer = composeWithDevTools(applyMiddleware(thunk));\r\n\r\nconst storeState = createStore(rootReducer, enhancer);\r\n\r\nexport default storeState;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch, AppThunk } from \"../../index\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch & AppThunk>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import styles from \"./appHeaderStyles.module.css\";\r\nimport \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/box.css\";\r\nimport {\r\n  BurgerIcon,\r\n  ListIcon,\r\n  Logo,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.container}>\r\n        <nav className={styles.nav__menu_left}>\r\n          <button className={`${styles.menu_btn} pt-4 pb-4 pl-5 pr-5`}>\r\n            <BurgerIcon type=\"primary\" />\r\n            <span className=\"text text_type_main-default pl-2\">\r\n              Конструктор\r\n            </span>\r\n          </button>\r\n          <button className={`${styles.menu_btn} pt-4 pb-4 pl-5 pr-5`}>\r\n            <ListIcon type=\"secondary\" />\r\n            <span className=\"text text_type_main-default text_color_inactive pl-2\">\r\n              Лента заказов\r\n            </span>\r\n          </button>\r\n        </nav>\r\n        <div className={styles.logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav className={styles.nav__menu_right}>\r\n          <button className={`${styles.menu_btn} pt-4 pb-4 pl-5 pr-5`}>\r\n            <ProfileIcon type=\"secondary\" />\r\n            <span className=\"text text_type_main-default text_color_inactive pl-2\">\r\n              Личный кабинет\r\n            </span>\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import { forwardRef } from \"react\";\r\n\r\nimport styles from \"./ingredientElementStyles.module.css\";\r\n\r\nimport { Counter } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/counter\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/currency-icon\";\r\n\r\nimport { IBurgerIngredientElement } from \"../../../../utils/types\";\r\n\r\nconst IngredientElement = forwardRef<\r\n  HTMLDivElement,\r\n  IBurgerIngredientElement & { isDragging: boolean }\r\n>(({ ingredient, openModal, isDragging, count }, ref) => {\r\n  const handleOpenModal = () => {\r\n    openModal({ modalType: \"ingredientDetail\", itemId: ingredient._id });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isDragging\r\n          ? `${styles.ingredient_element} ${styles.dragging_element}`\r\n          : `${styles.ingredient_element}`\r\n      }\r\n    >\r\n      <div\r\n        className={styles.ingredient_content}\r\n        onClick={handleOpenModal}\r\n        ref={ref}\r\n      >\r\n        <img\r\n          alt=\"Изображение игредиента бургера\"\r\n          src={ingredient.image}\r\n          className={styles.element_img}\r\n        />\r\n        <p className={styles.price}>\r\n          {ingredient.price}\r\n          <CurrencyIcon type=\"primary\" />\r\n        </p>\r\n        <p className=\"text text_type_main-default\">{ingredient.name}</p>\r\n      </div>\r\n      {count !== 0 && <Counter size=\"default\" count={count} />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default IngredientElement;\r\n","import { FC } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\n\r\nimport IngredientElement from \"../ingredient-element/ingredientElement\";\r\n\r\nimport { IBurgerIngredientElement } from \"../../../../utils/types\";\r\n\r\nconst IngredientElementDndWrapper: FC<IBurgerIngredientElement> = ({\r\n  ingredient,\r\n  openModal,\r\n  count,\r\n}) => {\r\n  const [{ isDrag }, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: { ingredient },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <IngredientElement\r\n      ingredient={ingredient}\r\n      openModal={openModal}\r\n      isDragging={isDrag}\r\n      ref={dragRef}\r\n      count={count}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IngredientElementDndWrapper;\r\n","import { forwardRef } from \"react\";\r\n\r\nimport styles from \"./ingredientGroupStyles.module.css\";\r\nimport IngredientElementDndWrapper from \"../ingredients-dnd-wrapper/ingredient-dnd-wrapper\";\r\n\r\nimport { IIngredient } from \"../../../../utils/types\";\r\n\r\nimport { IIngredientsGroup } from \"../../../../utils/types\";\r\n\r\nconst IngredientGroup = forwardRef<HTMLParagraphElement, IIngredientsGroup>(\r\n  ({ groupName, groupElements, openModal, count }, ref) => {\r\n    return (\r\n      <div>\r\n        <div className=\"mt-10 mb-6\">\r\n          <p className=\"text text_type_main-medium\" ref={ref}>\r\n            {groupName}\r\n          </p>\r\n        </div>\r\n        <div className={`${styles.content}`}>\r\n          {groupElements.map((burgerItem: IIngredient) => (\r\n            <IngredientElementDndWrapper\r\n              key={burgerItem._id}\r\n              ingredient={burgerItem}\r\n              openModal={openModal}\r\n              count={count[burgerItem._id]}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default IngredientGroup;\r\n","import React, { FC } from \"react\";\r\nimport { useState, useRef, useMemo, useCallback } from \"react\";\r\n\r\nimport { useAppSelector } from \"../../services/hooks/hooks\";\r\n\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport IngredientGroup from \"./components/ingredient-group/ingredientGroup\";\r\n\r\nimport styles from \"./burgerIngredientsStyles.module.css\";\r\nimport \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/box.css\";\r\n\r\nimport { IBurgerIngredients, IIngredient } from \"../../utils/types\";\r\n\r\nconst BurgerIngredients: FC<IBurgerIngredients> = ({ openModal }) => {\r\n  const { ingredientsDataFromServer } = useAppSelector(\r\n    (store) => store.ingredients\r\n  );\r\n\r\n  const { droppedIngredients, droppedBun } = useAppSelector(\r\n    ({ burgerConstructor: { droppedIngredients, droppedBun } }) => {\r\n      return { droppedIngredients, droppedBun };\r\n    }\r\n  );\r\n\r\n  // константы для формирования списка игредиентов\r\n\r\n  const buns = useMemo(\r\n    () =>\r\n      ingredientsDataFromServer.filter(\r\n        (ingredient) => ingredient.type === \"bun\"\r\n      ),\r\n    [ingredientsDataFromServer]\r\n  );\r\n  const sauces = useMemo(\r\n    () =>\r\n      ingredientsDataFromServer.filter(\r\n        (ingredient) => ingredient.type === \"sauce\"\r\n      ),\r\n    [ingredientsDataFromServer]\r\n  );\r\n  const mains = useMemo(\r\n    () =>\r\n      ingredientsDataFromServer.filter(\r\n        (ingredient) => ingredient.type === \"main\"\r\n      ),\r\n    [ingredientsDataFromServer]\r\n  );\r\n\r\n  // реализация функционала скрола\r\n  const bunRef = useRef<HTMLParagraphElement>(null);\r\n  const sauceRef = useRef<HTMLParagraphElement>(null);\r\n  const mainRef = useRef<HTMLParagraphElement>(null);\r\n\r\n  const [currentTab, setCurrentTab] = useState(\"buns\");\r\n\r\n  const handleTabClick = useCallback(\r\n    ({ tab, ref }) =>\r\n      () => {\r\n        setCurrentTab(tab);\r\n        ref.current.scrollIntoView({ behavior: \"smooth\" });\r\n      },\r\n    [setCurrentTab]\r\n  );\r\n\r\n  const handleIngredientListScroll = (\r\n    event: React.UIEvent<HTMLUListElement>\r\n  ) => {\r\n    const scrollContainer = event.target as HTMLUListElement;\r\n    const scrollPosition = scrollContainer.scrollTop;\r\n    if (!sauceRef.current || !mainRef.current) {\r\n      return;\r\n    }\r\n    const sauceTabPosition = sauceRef.current.offsetTop;\r\n    const mainTabPosition = mainRef.current.offsetTop;\r\n    const scrollSetup = 400;\r\n    if (scrollPosition + scrollSetup <= sauceTabPosition) {\r\n      setCurrentTab(\"buns\");\r\n    } else if (scrollPosition + scrollSetup <= mainTabPosition) {\r\n      setCurrentTab(\"sauses\");\r\n    } else {\r\n      setCurrentTab(\"mains\");\r\n    }\r\n  };\r\n  // счетчик игредиентов при перетаскивании\r\n  const ingredientCounter = useMemo(() => {\r\n    return ingredientsDataFromServer.reduce((result, ingredient) => {\r\n      if (ingredient.type === \"bun\") {\r\n        return {\r\n          ...result,\r\n          [ingredient._id]:\r\n            droppedBun && ingredient._id === droppedBun._id ? 1 : 0,\r\n        };\r\n      }\r\n      return {\r\n        ...result,\r\n        [ingredient._id]: droppedIngredients.filter(\r\n          (droppedIngredient: IIngredient) =>\r\n            droppedIngredient._id === ingredient._id\r\n        ).length,\r\n      };\r\n    }, {});\r\n  }, [ingredientsDataFromServer, droppedIngredients, droppedBun]);\r\n\r\n  return (\r\n    <section className={`${styles.burger_ingredients} pt-10`}>\r\n      <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n      <div className={`${styles.burger_menu_tab} mt-5 mb-10`}>\r\n        <Tab\r\n          value=\"buns\"\r\n          active={currentTab === \"buns\"}\r\n          onClick={handleTabClick({\r\n            tab: currentTab,\r\n            ref: bunRef,\r\n          })}\r\n        >\r\n          Булки\r\n        </Tab>\r\n        <Tab\r\n          value=\"sauses\"\r\n          active={currentTab === \"sauses\"}\r\n          onClick={handleTabClick({\r\n            tab: currentTab,\r\n            ref: sauceRef,\r\n          })}\r\n        >\r\n          Соусы\r\n        </Tab>\r\n        <Tab\r\n          value=\"mains\"\r\n          active={currentTab === \"mains\"}\r\n          onClick={handleTabClick({\r\n            tab: currentTab,\r\n            ref: mainRef,\r\n          })}\r\n        >\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <ul\r\n        className={`${styles.burger_list_container} pt-25`}\r\n        onScroll={handleIngredientListScroll}\r\n      >\r\n        <li>\r\n          <IngredientGroup\r\n            groupName={\"Булки\"}\r\n            groupElements={buns}\r\n            ref={bunRef}\r\n            openModal={openModal}\r\n            count={ingredientCounter}\r\n          />\r\n        </li>\r\n        <li>\r\n          <IngredientGroup\r\n            groupName={\"Соусы\"}\r\n            groupElements={sauces}\r\n            ref={sauceRef}\r\n            openModal={openModal}\r\n            count={ingredientCounter}\r\n          />\r\n        </li>\r\n        <li>\r\n          <IngredientGroup\r\n            groupName={\"Начинки\"}\r\n            groupElements={mains}\r\n            ref={mainRef}\r\n            openModal={openModal}\r\n            count={ingredientCounter}\r\n          />\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import { FC } from \"react\";\r\nimport styles from \"./ingredientMoldStyles.module.css\";\r\n\r\nimport { IIngredientsMold } from \"../../../../utils/types\";\r\n\r\nconst IngredientsMold: FC<IIngredientsMold> = ({ children }) => {\r\n  return <div className={`${styles.container}`}>{children}</div>;\r\n};\r\n\r\nexport default IngredientsMold;\r\n","import { FC } from \"react\";\r\nimport styles from \"./bunMoldStyles.module.css\";\r\n\r\nimport { IBunMold } from \"../../../../utils/types\";\r\n\r\nconst BunMold: FC<IBunMold> = ({ children, position }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        position === \"top\"\r\n          ? `${styles.mold} ${styles.mold_position_top}`\r\n          : position === \"bottom\"\r\n          ? `${styles.mold} ${styles.mold_position_bottom}`\r\n          : `${styles.mold}`\r\n      }\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BunMold;\r\n","import { forwardRef, useCallback } from \"react\";\r\n\r\nimport styles from \"./burgerConstructorElementStyles.module.css\";\r\n\r\nimport {\r\n  DragIcon,\r\n  ConstructorElement,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { IBurgerConstructorElement } from \"../../../../utils/types\";\r\n\r\nconst BurgerConstructorElement = forwardRef<\r\n  HTMLLIElement,\r\n  IBurgerConstructorElement\r\n>(({ ingredient, index, handleDeleteIngredient }, ref) => {\r\n  const handleDelete = useCallback(\r\n    () => handleDeleteIngredient(index),\r\n    [handleDeleteIngredient, index]\r\n  );\r\n\r\n  return (\r\n    <li ref={ref} className={styles.container_wrapper}>\r\n      <div className=\"mr-1\">\r\n        <DragIcon type=\"primary\" />\r\n      </div>\r\n      <ConstructorElement\r\n        text={ingredient.name}\r\n        price={ingredient.price}\r\n        thumbnail={ingredient.image}\r\n        handleClose={handleDelete}\r\n      />\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default BurgerConstructorElement;\r\n","import { FC, useRef, useEffect } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { reorderConstructorIngredient } from \"../../../../services/actions/constructorActions\";\r\nimport BurgerConstructorElement from \"../burger-constructor-element/burgerConstructorElement\";\r\n\r\nimport { IBurgerConstructorElement } from \"../../../../utils/types\";\r\n\r\nconst BurgerConstructorElementDndWrapper: FC<IBurgerConstructorElement> = ({\r\n  ingredient,\r\n  index,\r\n  handleDeleteIngredient,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const ref = useRef(null);\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: \"burger-constructor-element\",\r\n    item: { draggedElementIndex: index },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, dropTarget] = useDrop({\r\n    accept: \"burger-constructor-element\",\r\n    drop(item: { draggedElementIndex: number }) {\r\n      dispatch(reorderConstructorIngredient(item.draggedElementIndex, index));\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  useEffect(\r\n    function () {\r\n      dragRef(dropTarget(ref));\r\n    },\r\n    [dragRef, dropTarget]\r\n  );\r\n\r\n  return (\r\n    <BurgerConstructorElement\r\n      ingredient={ingredient}\r\n      ref={ref}\r\n      index={index}\r\n      handleDeleteIngredient={handleDeleteIngredient}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BurgerConstructorElementDndWrapper;\r\n","//import { useSelector, useDispatch } from \"react-redux\";\r\nimport { forwardRef, useCallback, useMemo } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\n\r\nimport {\r\n  ConstructorElement,\r\n  Button,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport styles from \"./burgerConstructorDndStyles.module.css\";\r\n\r\nimport IngredientsMold from \"./components/ingredients-mold/ingredientsMold\";\r\nimport BunMold from \"./components/bun-mold/bunMold\";\r\nimport BurgerConstructorElementDndWrapper from \"./components/burger-constructor-element-dnd-wrapper/burgerConstructorElementDndWrapper\";\r\n\r\nimport { getOrderNumberApi } from \"../../services/actions/orderActions\";\r\nimport { deleteIngredient } from \"../../services/actions/constructorActions\";\r\n\r\nimport { IBurgerConstructor } from \"../../utils/types\";\r\n\r\nimport { IIngredient } from \"../../utils/types\";\r\n\r\nconst BurgerConstructorDnd = forwardRef<HTMLUListElement, IBurgerConstructor>(\r\n  ({ openModal }, ref) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    /* const droppedIngredients = useAppSelector(\r\n      (store) => store.burgerConstructor.droppedIngredients\r\n    );\r\n\r\n    const droppedBun = useAppSelector(\r\n      (store) => store.burgerConstructor.droppedBun\r\n    );*/\r\n\r\n    const { droppedIngredients, droppedBun } = useAppSelector(\r\n      (store) => store.burgerConstructor\r\n    );\r\n\r\n    const totalPrice = useMemo(\r\n      () =>\r\n        droppedIngredients.reduce(\r\n          (price: number, ingredient: IIngredient) => price + ingredient.price,\r\n          droppedBun ? droppedBun.price * 2 : 0\r\n        ),\r\n      [droppedIngredients, droppedBun]\r\n    );\r\n\r\n    const onSubmitClick = () => {\r\n      if (!droppedBun) {\r\n        alert(\"Вы не выбрали булочку!\"); //TODO что-то более красивое\r\n        return;\r\n      } else {\r\n        const constructorIngredients = droppedIngredients.concat(droppedBun);\r\n        const orderIngredientList = constructorIngredients.map(\r\n          (el: IIngredient) => el._id\r\n        );\r\n        dispatch(getOrderNumberApi(orderIngredientList));\r\n        openModal({ modalType: \"orderDetail\" });\r\n      }\r\n    };\r\n\r\n    const handleDeleteIngredient = useCallback(\r\n      (indexToDelete) => {\r\n        console.log(\"delete\");\r\n        dispatch(deleteIngredient(indexToDelete));\r\n      },\r\n      [dispatch]\r\n    );\r\n\r\n    return (\r\n      <section\r\n        className={`${styles.main_container} pt-25`}\r\n        ari-label=\"Конструктор бургеров\"\r\n      >\r\n        <ul className={styles.ingredients_list} ref={ref}>\r\n          <li className={`${styles.ingredient} ${styles.top_container}`}>\r\n            {!droppedBun ? (\r\n              <BunMold position=\"top\">Перетащи себе булочку</BunMold>\r\n            ) : (\r\n              <ConstructorElement\r\n                type=\"top\"\r\n                isLocked\r\n                text={`${droppedBun.name} (верх)`}\r\n                price={droppedBun.price}\r\n                thumbnail={droppedBun.image}\r\n              />\r\n            )}\r\n          </li>\r\n          <li className={styles.ingredient}>\r\n            {droppedIngredients.length === 0 ? (\r\n              <IngredientsMold>Добавь начинку и соус</IngredientsMold>\r\n            ) : (\r\n              <ul className={styles.constructor_container}>\r\n                {droppedIngredients\r\n                  ? droppedIngredients.map(\r\n                      (ingredient: IIngredient, index: number) => {\r\n                        return (\r\n                          <BurgerConstructorElementDndWrapper\r\n                            ingredient={ingredient}\r\n                            key={ingredient.uid}\r\n                            index={index}\r\n                            handleDeleteIngredient={handleDeleteIngredient}\r\n                          />\r\n                        );\r\n                      }\r\n                    )\r\n                  : null}\r\n              </ul>\r\n            )}\r\n          </li>\r\n          <li className={`${styles.ingredient} ${styles.bottom_container}`}>\r\n            {!droppedBun ? (\r\n              <BunMold position=\"bottom\">Перетащи себе булочку</BunMold>\r\n            ) : (\r\n              <ConstructorElement\r\n                type=\"bottom\"\r\n                isLocked\r\n                text={`${droppedBun.name} (низ)`}\r\n                price={droppedBun.price}\r\n                thumbnail={droppedBun.image}\r\n              />\r\n            )}\r\n          </li>\r\n        </ul>\r\n        <div className={styles.outcome}>\r\n          <div className={styles.price}>\r\n            <p className=\"text text_type_digits-medium mr-2\">{totalPrice}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n          <Button type=\"primary\" size=\"large\" onClick={onSubmitClick}>\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n);\r\n\r\nexport default BurgerConstructorDnd;\r\n","import { FC } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nimport { useAppDispatch } from \"../../../../services/hooks/hooks\";\r\n\r\nimport BurgerConstructorDnd from \"../../burgerConstructorDnd\";\r\n\r\nimport { dropSelectedIngredient } from \"../../../../services/actions/constructorActions\";\r\nimport { IBurgerConstructorDnDWrapper } from \"../../../../utils/types\";\r\nimport { TDetailIngredient } from \"../../../../utils/types\";\r\n\r\nconst BurgerConstructorDndWrapper: FC<IBurgerConstructorDnDWrapper> = ({\r\n  openModal,\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const [, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop({ ingredient }: TDetailIngredient) {\r\n      dispatch(dropSelectedIngredient(ingredient));\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return <BurgerConstructorDnd openModal={openModal} ref={dropTarget} />;\r\n};\r\n\r\nexport default BurgerConstructorDndWrapper;\r\n","import { FC } from \"react\";\r\n\r\nimport styles from \"./modalOverlay.module.css\";\r\n\r\nimport { TOverlayCloseModal } from \"../../../utils/types\";\r\n\r\nconst ModalOverlay: FC<TOverlayCloseModal> = ({ closeModal, children }) => {\r\n  return (\r\n    <div className={styles.overlay} onClick={closeModal}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import { FC } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styles from \"./modal.module.css\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"./modal-overlay/modalOverlay\";\r\nimport { TCloseModal } from \"../../utils/types\";\r\n\r\nconst Modal: FC<TCloseModal> = ({ closeModal, children }) => {\r\n  const modalRoot = document.getElementById(\"modal-root\");\r\n\r\n  useEffect(() => {\r\n    const onEscPress = (evt: KeyboardEvent) => {\r\n      if (evt.key === \"Escape\") {\r\n        evt.preventDefault();\r\n        closeModal();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", onEscPress);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onEscPress);\r\n    };\r\n  }, [closeModal]);\r\n\r\n  const onOverlayClick = (evt: any) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      // закрытие окна оверлэя по клику, но не по модальному окну\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <ModalOverlay closeModal={onOverlayClick}>\r\n        <div className={styles.modal}>\r\n          <div className={styles.modal_closebtn}>\r\n            <CloseIcon type=\"primary\" onClick={closeModal} />\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </ModalOverlay>\r\n    </>,\r\n    modalRoot!\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/doneImg.2022ce2b.svg\";","import doneImg from \"../../image/doneImg.svg\";\r\n\r\nimport styles from \"./orderDetails.module.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction OrderDetails() {\r\n  const { orderId, isOrderInfoLoading, isOrderInfoRequestFaild } = useSelector(\r\n    (store) => store.order\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isOrderInfoLoading && (\r\n        <div className={`${styles.container} pt-30 pb-25`}>\r\n          <div className={`${styles.loader}`}></div>\r\n          <span className={`${styles.spanLoader}`}>Загрузка...</span>\r\n        </div>\r\n      )}\r\n      {!isOrderInfoLoading && !isOrderInfoRequestFaild && orderId && (\r\n        <div className={`${styles.container} pt-30 pb-25`}>\r\n          <div className=\"mb-8\">\r\n            <p className={`${styles.glow} text text_type_digits-large`}>\r\n              {orderId.order.number}\r\n            </p>\r\n          </div>\r\n          <p className=\"text text_type_main-medium\">Идентификатор заказа</p>\r\n          <img\r\n            className={`${styles.icon} mb-15 mt-15`}\r\n            alt=\"заказ принят\"\r\n            src={doneImg}\r\n          />\r\n          <p className=\"text text_type_main-default\">\r\n            Ваш заказ начали готовить\r\n          </p>\r\n          <div className=\"mt-2\">\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              Дождитесь готовности на орбитальной станции\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import { FC } from \"react\";\r\n\r\nimport styles from \"./ingredientDetails.module.css\";\r\n\r\nimport { TDetailIngredient } from \"../../../../utils/types\";\r\n\r\nconst IngredientDetails: FC<TDetailIngredient> = ({ ingredient }) => {\r\n  return (\r\n    <div className={`${styles.container} p-10`}>\r\n      <p className={`${styles.header} text text_type_main-large`}>\r\n        Детали ингредиента\r\n      </p>\r\n      <img\r\n        className={`${styles.icon}`}\r\n        alt=\"изображение ингредиента\"\r\n        src={ingredient.image}\r\n      />\r\n      <p className=\"text text_type_main-medium\">{ingredient.name}</p>\r\n      <div className={`${styles.captioncontainer} mt-8 text_color_inactive`}>\r\n        <div className={`${styles.element} mr-5`}>\r\n          <p className=\"text text_type_main-default\">Калории,ккал</p>\r\n          <p className=\"text text_type_digits-default\">{ingredient.calories}</p>\r\n        </div>\r\n        <div className={`${styles.element} mr-5`}>\r\n          <p className=\"text text_type_main-default\">Белки, г</p>\r\n          <p className=\"text text_type_digits-default\">{ingredient.proteins}</p>\r\n        </div>\r\n        <div className={`${styles.element} mr-5`}>\r\n          <p className=\"text text_type_main-default\">Жиры, г</p>\r\n          <p className=\"text text_type_digits-default\">{ingredient.fat}</p>\r\n        </div>\r\n        <div className={`${styles.element} mr-5`}>\r\n          <p className=\"text text_type_main-default\">Углеводы, г</p>\r\n          <p className=\"text text_type_digits-default\">\r\n            {ingredient.carbohydrates}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import { useEffect, FC } from \"react\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { useAppDispatch } from \"../../services/hooks/hooks\";\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport styles from \"./appStyles.module.css\";\r\n\r\n// компоненты\r\nimport AppHeader from \"../app-header/appHeader\";\r\nimport BurgerIngredients from \"../burger-ingredients/burgerIngredients\";\r\n\r\nimport BurgerConstructorDndWrapper from \"../burger-constructor/components/burger-constructor-dnd-wrapper/burger-constructor-dnd-wrapper\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/orderDetails\";\r\nimport IngredientDetails from \"../burger-ingredients/components/ingredient-detail/ingredientDetails\";\r\n\r\n// серверная часть\r\n\r\nimport { getIngredientsRequestApi } from \"../../services/actions/ingredientsActions\";\r\n\r\nimport {\r\n  closeModal,\r\n  openModalOrder,\r\n  openModalIngredient,\r\n} from \"../../services/actions/modalActions\";\r\n\r\nimport { clearOrderList } from \"../../services/actions/constructorActions\";\r\nimport { IIngredient } from \"../../utils/types\";\r\nimport { TOpenModal } from \"../../utils/types\";\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  //запрос данных ингредиентов с сервера\r\n  const {\r\n    ingredientsApiRequest,\r\n    ingredientsApiFailed,\r\n    ingredientsDataFromServer,\r\n  } = useAppSelector((store) => store.ingredients);\r\n\r\n  useEffect(() => {\r\n    dispatch(getIngredientsRequestApi());\r\n  }, [dispatch]);\r\n\r\n  // реализация функциона модельных окон\r\n\r\n  const {\r\n    isOrderDetailModalVisible,\r\n    isIngredientDetailModalVisible,\r\n    modalIngredientData,\r\n  } = useAppSelector((store) => store.modal);\r\n\r\n  function openModal({ modalType, itemId }: TOpenModal) {\r\n    if (modalType === \"ingredientDetail\") {\r\n      const ingredient = ingredientsDataFromServer.find(\r\n        (item: IIngredient) => item._id === itemId\r\n      );\r\n      dispatch(openModalIngredient(ingredient));\r\n    } else {\r\n      if (modalType === \"orderDetail\") {\r\n        dispatch(openModalOrder());\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleIngredientModalClose = () => {\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  const handleOrderModalClose = () => {\r\n    dispatch(closeModal());\r\n    dispatch(clearOrderList());\r\n  };\r\n\r\n  //___________________________________________render______________________________________________\r\n  return (\r\n    <div className={styles.app}>\r\n      <AppHeader />\r\n      {ingredientsApiRequest && <h1>загрузка данных</h1>}\r\n      {ingredientsApiFailed && (\r\n        <main>\r\n          <section>\r\n            <h1 className=\"text text_type_main-large mt-3\">\r\n              Ох, ошибка загрузки данных...\r\n            </h1>\r\n          </section>\r\n        </main>\r\n      )}\r\n      <DndProvider backend={HTML5Backend}>\r\n        {!ingredientsApiRequest &&\r\n          !ingredientsApiFailed &&\r\n          ingredientsDataFromServer.length && (\r\n            <main className={styles.content}>\r\n              <BurgerIngredients openModal={openModal} />\r\n              <BurgerConstructorDndWrapper openModal={openModal} />\r\n            </main>\r\n          )}\r\n      </DndProvider>\r\n      {/* модальное окно  - подробное описание игредиента*/}\r\n      {isIngredientDetailModalVisible && (\r\n        <Modal closeModal={handleIngredientModalClose}>\r\n          <IngredientDetails ingredient={modalIngredientData} />\r\n        </Modal>\r\n      )}\r\n      {/* модальное окно о готовности заказа. номер и т.д.*/}\r\n      {isOrderDetailModalVisible && (\r\n        <Modal closeModal={handleOrderModalClose}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport storeState from \"./services/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { Action, ActionCreator } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { TOrderActions } from \"./services/actions/orderActions\";\r\nimport { TIngredientsActions } from \"./services/actions/ingredientsActions\";\r\nimport { TConstructorActions } from \"./services/actions/constructorActions\";\r\nimport { TModalActions } from \"./services/actions/modalActions\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./components/app/app\";\r\n\r\ntype TApplicationActions =\r\n  | TOrderActions\r\n  | TConstructorActions\r\n  | TIngredientsActions\r\n  | TModalActions;\r\n\r\nexport type RootState = ReturnType<typeof storeState.getState>;\r\nexport type AppThunk<TReturn = void> = ActionCreator<\r\n  ThunkAction<TReturn, Action, RootState, TApplicationActions>\r\n>;\r\nexport type AppDispatch = typeof storeState.dispatch;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={storeState}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_element\":\"ingredientElementStyles_ingredient_element__2Bz62\",\"ingredient_content\":\"ingredientElementStyles_ingredient_content__1DIwh\",\"element_img\":\"ingredientElementStyles_element_img__38GqQ\",\"counter\":\"ingredientElementStyles_counter__3cDdz\",\"price\":\"ingredientElementStyles_price__1KM6N\",\"dragging_element\":\"ingredientElementStyles_dragging_element__qhPgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orderDetails_container__1TOra\",\"icon\":\"orderDetails_icon__HKjCl\",\"glow\":\"orderDetails_glow__JcBYS\",\"loader\":\"orderDetails_loader__1jDr-\",\"spanLoader\":\"orderDetails_spanLoader__37K9J\",\"text\":\"orderDetails_text__3u_sB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mold\":\"bunMoldStyles_mold__1V9Y-\",\"mold_position_top\":\"bunMoldStyles_mold_position_top__1i1ry\",\"mold_position_bottom\":\"bunMoldStyles_mold_position_bottom__1Kim8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_ingredients\":\"burgerIngredientsStyles_burger_ingredients__sVE_0\",\"burger_menu_tab\":\"burgerIngredientsStyles_burger_menu_tab__58iED\",\"burger_list_container\":\"burgerIngredientsStyles_burger_list_container__3lOlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"appStyles_app__BfjSk\",\"content\":\"appStyles_content__1TAF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1XpcX\",\"modal_closebtn\":\"modal_modal_closebtn__3tZAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredientGroupStyles_content__1kAXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredientMoldStyles_container__sH-99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_wrapper\":\"burgerConstructorElementStyles_container_wrapper__992uL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modalOverlay_overlay__35JZj\"};"],"sourceRoot":""}